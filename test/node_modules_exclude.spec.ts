
//http://jonathancreamer.com/testing-typescript-classes-with-jest-and-jest-mocks/
// https://medium.com/@davguij/mocking-typescript-classes-with-jest-8ef992170d1d
// require due to https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require
import NodeModulesExclude = require("../src/node_modules_exclude")
import * as excludeConfig from '../src/exclude_config.json';
// import Serverless  = require('./serverless')
import {Serverless} from '../src/serverless';

test("example test case", () => { 
  expect(1).toBe(1);

});

describe('NodeModulesExclude', () => {
   

  // nodeModulesExclude: NodeModulesExclude;
  //this.nodeModulesExclude = new NodeModulesExclude({},{});
  // jest.mock('../src/node_modules_exclude');
  // let w: NodeModulesExclude;
  // const mockedClass = <jest.Mock<NodeModulesExclude>>NodeModulesExclude;

  it('populates exclude list if no excludes were configured in serverless.yml', () => {
    let serverless: Serverless = {
      service: {Â 
        package: {
          exclude: []
        }
      }
    };
    
    let instance =  new NodeModulesExclude(serverless,{});
    instance.extendExcludes();

    console.log("serverless:", JSON.stringify(serverless, null, 2));
    console.log("blahf:", typeof NodeModulesExclude);

    

    const rootExcludes = excludeConfig.root;
    expect(serverless.service.package.exclude).toEqual(expect.arrayContaining(excludeConfig.root));
    expect(serverless.service.package.exclude).toEqual(expect.arrayContaining(instance["_appendNodeExcludes"]([])));
  })

})
